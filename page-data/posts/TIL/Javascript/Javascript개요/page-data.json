{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL/Javascript/Javascript개요","result":{"data":{"markdownRemark":{"id":"3b234a48-e942-5bf5-9776-64d91a290273","html":"<h1 id=\"javascript의-표준화\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-%ED%91%9C%EC%A4%80%ED%99%94\" aria-label=\"javascript의 표준화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript의 표준화</h1>\n<p>크로스 브라우징 이슈(MS의 익스플로러..)로 인한 표준화된 언어의 개발이 필요해짐</p>\n<table>\n<thead>\n<tr>\n<th>버전</th>\n<th align=\"center\">출시 연도</th>\n<th>특징</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ES1</td>\n<td align=\"center\">1997</td>\n<td>초판</td>\n</tr>\n<tr>\n<td>ES2</td>\n<td align=\"center\">1998</td>\n<td>ISO/IEC 16262 국제 표준과 동일한 규격 사용</td>\n</tr>\n<tr>\n<td>ES3</td>\n<td align=\"center\">1999</td>\n<td>정규 표현식, try… catch</td>\n</tr>\n<tr>\n<td>ES5</td>\n<td align=\"center\">2009</td>\n<td>HTML5와 함께 출현 JSON, strict mod, 접근자 프로퍼티, 어트리뷰트 제어, 향상된 배열 조작기능(forEach, map, filter, reduce, some, every</td>\n</tr>\n<tr>\n<td>ES6(ECMAscript 2015)</td>\n<td align=\"center\">2015</td>\n<td>let/const, 클래스, 화살표함수, 템플릿 리터럴, 디스트럭처링 할당, 스프레드 문법, rest 파라미터, 심벌, 프로미스, Map/Set, 이터러블, for…of, 제너레이터, Proxy, 모듈 import/export</td>\n</tr>\n<tr>\n<td>ES7(ECMAscript 2016)</td>\n<td align=\"center\">2016</td>\n<td>지수(**) 연산자, Array.prototype.includes, String.prototype.includes</td>\n</tr>\n<tr>\n<td>ES8(ECMAscript 2017)</td>\n<td align=\"center\">2017</td>\n<td>async/await, Objeect 정적 메서드(Object.values, Obejct.entries, Object.getOwnPropertyDescriptors</td>\n</tr>\n<tr>\n<td>ES9(ECMAscript 2018)</td>\n<td align=\"center\">2018</td>\n<td>Obejct rest/spread 프로퍼티, Promise.prototype.finally, async.generator, for await… of</td>\n</tr>\n<tr>\n<td>ES10(ECMAscript 2019)</td>\n<td align=\"center\">2019</td>\n<td>Objeect.fromEntries, Array.prototype.flat, Array.prototype.flatMap, optional catch binding</td>\n</tr>\n<tr>\n<td>ES11(ECMAscript 2020)</td>\n<td align=\"center\">2020</td>\n<td>String.prototype.matchAll, BigInt, globalThis, Promise.allSettled, null 병합 연산자, 옵셔널 체이닝 연산자, for … in enumertion order</td>\n</tr>\n<tr>\n<td>ES12(ECMAscript 2021</td>\n<td align=\"center\">2021</td>\n<td>Optional Chaining(?.), Nulish coalescing operation(??), replaceAll, Private visibility modifier, WeakRefs, Finalizers, Promise.any</td>\n</tr>\n</tbody>\n</table>\n<p><br><br><br><br></p>\n<h1 id=\"javascript의-역사\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-%EC%97%AD%EC%82%AC\" aria-label=\"javascript의 역사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript의 역사</h1>\n<h2 id=\"ajax\" style=\"position:relative;\"><a href=\"#ajax\" aria-label=\"ajax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ajax</h2>\n<p>JS와 비동기 방식으로 데이터를 교환할 수 있는 Ajax가 XMLHttpRequest라는 이름으로 등장했다.  </p>\n<h2 id=\"jquery\" style=\"position:relative;\"><a href=\"#jquery\" aria-label=\"jquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery</h2>\n<p>DOM을 더욱 쉽게 제어할 수 있는 수단으로 나왔다.  쉽고 직관적인 jQuery를 더 선호하는 개발자가 양산되기도 했다.  </p>\n<h2 id=\"v8-자바스크립트-엔진\" style=\"position:relative;\"><a href=\"#v8-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%97%94%EC%A7%84\" aria-label=\"v8 자바스크립트 엔진 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>V8 자바스크립트 엔진</h2>\n<p>비동기 처리로 인한 더 성능 좋은 엔진이 필요해졌고, V8 엔진이 이를 대체했다, 과거 웹 서버에서 수행되던 로직들이 대거 클라이언트(브라우저)로 이동했고, 이는 웹 애플리케이션 개발에서 FE가 주목받게 되는 계기가 되었다.  </p>\n<h2 id=\"nodejs\" style=\"position:relative;\"><a href=\"#nodejs\" aria-label=\"nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js</h2>\n<p>2009년 V8 JS 엔진으로 빌드된 JS 런타임 환경이다.<br>\nNode.js는 브라우저의 자바스크립트를 다른 환경에서도 동작할 수 있도록 자바스크립트 엔진을 브라우저에서 독립시킨 실행 환경.<br>\n주로 서버사이드 애플리케이션 개발에 주로 사용된다.  </p>\n<p>비동기I/O를 지원하면 단일 스레드 이벤트 루프 기반으로 동작<br>\n이로인해 요청(Request)처리 성능이 좋고 SPA처리에 적합하다.  </p>\n<h2 id=\"spa-프레임워크\" style=\"position:relative;\"><a href=\"#spa-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC\" aria-label=\"spa 프레임워크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA 프레임워크</h2>\n<p>데스크톱 어플리케이션과 비슷한 성능과 UX를 제공하는 것이 필수가 되었고, 이를 만족시키기 위한 CBD(Component Based Development) 방법론을 기반으로 하는 SPA(Single Page Application)이 대중화 되며 Angular, Vue.js, React, Svelte등 다양한 프레임워크/라이브러리가 많아졌다.</p>\n<h2 id=\"javascript와-ecmascript\" style=\"position:relative;\"><a href=\"#javascript%EC%99%80-ecmascript\" aria-label=\"javascript와 ecmascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript와 ECMAScript</h2>\n<p>Javascript는 일반적으로 뼈대를 이루는 ECMAScript와 브라우저가 별도로 지원하는 클라이언트 사이드 Web API, 즉 DOM, BOM, Canvas, XMLHttpRequest, fetch, requestAnimationFrame, SVG, Web Storage, Web Component, Web Worker를 모두 포함하는 개념</p>","fields":{"slug":"/posts/TIL/Javascript/Javascript개요","tagSlugs":["/tag/javascript/","/tag/ecm-ascript/"]},"frontmatter":{"date":"2021-01-27T02:30:44.175Z","description":"Javscript 개요","tags":["Javascript","ECMAscript"],"title":"Javascript개요","socialImage":null}}},"pageContext":{"slug":"/posts/TIL/Javascript/Javascript개요"}},"staticQueryHashes":["251939775","401334301","825871152"]}