{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL/Javascript/Javascript 문법정리_1","result":{"data":{"markdownRemark":{"id":"043495b3-0797-5d26-9b90-237ed9627e01","html":"<h1 id=\"javascript-문법-정리\" style=\"position:relative;\"><a href=\"#javascript-%EB%AC%B8%EB%B2%95-%EC%A0%95%EB%A6%AC\" aria-label=\"javascript 문법 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript 문법 정리</h1>\n<p><a href=\"http://www.yes24.com/Product/Goods/92742567\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">모던 자바스크립트 Deep Dive</a>와 <a href=\"https://developer.mozilla.org/ko/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a>를 보고 요약한 내용입니다.</p>\n<p>앞으로 사용한 Javascript 문법을 하나씩 정리해보자.  </p>\n<ul>\n<li>변수</li>\n<li>표현식과 문</li>\n<li>데이터 타입</li>\n<li>연산자</li>\n<li>제어문</li>\n<li>타입 변화과 단축 평가</li>\n</ul>\n<p>설명은 하나 이상의 언어에 대한 지식이 있다는 가정하에 설명한다.  </p>\n<p><br><br></p>\n<h1 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h1>\n<h2 id=\"변수란\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EB%9E%80\" aria-label=\"변수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수란?</h2>\n<p>하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름  </p>\n<ul>\n<li>변수명 : 변수의 이름</li>\n<li>할당 : 변수에 값을 저장</li>\n<li>참조 : 변수에 저장된 값을 읽어 들이는 것</li>\n</ul>\n<h2 id=\"식별자\" style=\"position:relative;\"><a href=\"#%EC%8B%9D%EB%B3%84%EC%9E%90\" aria-label=\"식별자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>식별자</h2>\n<p>식별자는 어떤 값을 구별해서 식별할 수 있는 고유한 이름</p>\n<ul>\n<li>값이 아니라 메모리 주소를 가지고 있다.</li>\n</ul>\n<h2 id=\"변수-선언\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 선언</h2>\n<p>변수 사용을 위해선 반드시 선언이 필요<br>\n변수 선언을 위해서 var, let, const를 사용한다.<br>\n선언된 공간에 값을 할당하지 않으면, 기본적으로 <code class=\"language-text\">undefined</code>를 암묵적으로 할당한다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> score<span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span></code></pre></div>\n<h2 id=\"변수-호이스팅\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85\" aria-label=\"변수 호이스팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 호이스팅</h2>\n<p>선언되지 않은 변수를 참조하게 되면 <code class=\"language-text\">ReferenceError</code>가 발생하는데, 아래 구문에서는 에러가 발생하지 않는다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span>\n<span class=\"token keyword\">var</span> score<span class=\"token punctuation\">;</span>          <span class=\"token comment\">//변수 선언</span></code></pre></div>\n<p>그 이유는 변수 선언이 소스코드가 한 줄씩 순차적으로 실행되는 시점, 런타임이 아닌 그 이전 단계에서 실행되기 때문<br>\n위와 같은 자바스크립트 고유의 방식을 <code class=\"language-text\">변수 호이스팅</code> 이라고 한다.<br>\n변수 선언 뿐만 아니라 <code class=\"language-text\">var</code>, <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code>, <code class=\"language-text\">function*</code>, <code class=\"language-text\">class</code> 키워드 또한 변수 호이스팅이 일어나게 된다.</p>\n<h2 id=\"값의-할당\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%9D%98-%ED%95%A0%EB%8B%B9\" aria-label=\"값의 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값의 할당</h2>\n<p>할당에는 할당 연산자 <code class=\"language-text\">=</code>를 사용<br>\n하나의 구문으로 보이지만 변수 선언 + 할당 2단계로 나누어져 실행된다.<br>\n변수 선언은 호이스팅이 일어나 먼저 실행되고, 할당은 소스코드의 순서대로 실행된다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p>var 변수는 같은 메모리 공간에 대해서 재할당이 이루어지지 않는다.<br>\n재할당의 경우 새로운 메모리 공간에 값을 할당하고 변수의 메모리 주소를 바꿔주는 방식으로 작동한다.<br>\n버려진 메모리공간은 <code class=\"language-text\">가비지 컬렉터</code>에 의해서 관리 된다.  </p>\n<p>실질적인 재할당이 되지 않는 상수를 선언하기 위해서는 <code class=\"language-text\">const</code>를 사용한다.</p>\n<h2 id=\"식별자-네이밍-규칙\" style=\"position:relative;\"><a href=\"#%EC%8B%9D%EB%B3%84%EC%9E%90-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B7%9C%EC%B9%99\" aria-label=\"식별자 네이밍 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>식별자 네이밍 규칙</h2>\n<p>식별자 네이밍 규칙은 다음과 같다.</p>\n<ul>\n<li>식별자는 특수문자를 제외한 문자, 숫자, 언더바(_), 달러($)를 포함 할 수 있다.</li>\n<li>숫자로 시작할 수 없다.</li>\n<li>예약어는 사용 불가능 하다.</li>\n<li>대소문자를 구별한다.</li>\n</ul>\n<p><br><br></p>\n<h1 id=\"표현식과-문\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EA%B3%BC-%EB%AC%B8\" aria-label=\"표현식과 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식과 문</h1>\n<p>값(value)은 표현식(expression)이 평가(evaluate)되어 생성된 결과  </p>\n<h2 id=\"리터럴literal\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4literal\" aria-label=\"리터럴literal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴(Literal)</h2>\n<p>값을 이할 수 있는 무낮 또는 약속된 기호를 사용해 값을 생성하는 표기법</p>\n<table>\n<thead>\n<tr>\n<th>리터럴</th>\n<th>예시</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>정수</td>\n<td>100</td>\n<td></td>\n</tr>\n<tr>\n<td>부동 소수점</td>\n<td>10.5</td>\n<td></td>\n</tr>\n<tr>\n<td>2진수</td>\n<td>0b01000001</td>\n<td>0b로 시작</td>\n</tr>\n<tr>\n<td>8진수</td>\n<td>0o101</td>\n<td>0o로 시작</td>\n</tr>\n<tr>\n<td>16진수</td>\n<td>0x41</td>\n<td>0x로 시작</td>\n</tr>\n<tr>\n<td>문자열</td>\n<td>“Hello”, “World”</td>\n<td></td>\n</tr>\n<tr>\n<td>불리언</td>\n<td>true, false</td>\n<td></td>\n</tr>\n<tr>\n<td>null</td>\n<td>null</td>\n<td></td>\n</tr>\n<tr>\n<td>undefined</td>\n<td>undefined</td>\n<td></td>\n</tr>\n<tr>\n<td>객체</td>\n<td>{name: “kim”, address: “Seoul”}</td>\n<td></td>\n</tr>\n<tr>\n<td>배열</td>\n<td>[1, 2, 3]</td>\n<td></td>\n</tr>\n<tr>\n<td>함수</td>\n<td>function() {}</td>\n<td></td>\n</tr>\n<tr>\n<td>정규 표현식</td>\n<td>[A-Z]+/g</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"표현식expression\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9Dexpression\" aria-label=\"표현식expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식(Expression)</h2>\n<p>표현식은 값으로 평가될 수 있는 statement다.<br>\n또한 Value로 Evaluate될 수 있는 statement는 표현식</p>\n<h2 id=\"문statement\" style=\"position:relative;\"><a href=\"#%EB%AC%B8statement\" aria-label=\"문statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문(Statement)</h2>\n<p>Javascript에서는 세미콜론을 자동 삽입해주는 기능이 있다.(Automatic semicolon insertion)<br>\n세미콜론을 붙이는 것이 ESLint등의 정적 분석도구에서도 사용하며, 권장되는 방식이다.</p>\n<p><br><br></p>\n<h1 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h1>\n<p>ES6에서는 6개의 원시 데이터 타입(primitive type)과 객체 타입으로 분류한다.\n| 구분      | 데이터타입      | 설명                                                |\n| --------- | --------------- | --------------------------------------------------- |\n| 원시타입  | 숫자(Number)    | 숫자, 정수와 실수 구분 없이 하나의 숫자 타입만 존재 |\n|           | 문자열(String)  | 문자열                                              |\n|           | 불리언(Boolean) | true, false                                         |\n|           | undefined       | var 변수에 암묵적으로 할당                          |\n|           | null            | 값이 없는 것을 의도적으로 명시                      |\n|           | 심볼(Symbol)    | ES6 에서 추가된 7번째 타입                          |\n| 객체 타입 |                 | 객체, 함수, 배열                                    |</p>\n<h2 id=\"number\" style=\"position:relative;\"><a href=\"#number\" aria-label=\"number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Number</h2>\n<p>타 언어에 다양한 숫자 타입(int, float, double…)이 존재하는 것에 비해 자바스크립트는 단 하나의 숫자 타입만 존재<br>\nNumber 타입은 배정밀도 64비트 부동소수점 형식을 따른다.<br>\n모든 수를 실수로 처리하며, 정수만 표현하기 위한 데이터 타입(integer type)이 별도로 존재하지 않는다.  </p>\n<p>Number 타입은 추가적으로 세 가지 특별한 값도 표현할 수 있다.</p>\n<ul>\n<li>Infinity : 양의 무한대</li>\n<li>-Infinity : 음의 무한대</li>\n<li>NaN : 산술 연산 불가(not-a-number)</li>\n</ul>\n<h2 id=\"string\" style=\"position:relative;\"><a href=\"#string\" aria-label=\"string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String</h2>\n<p>텍스트 데이터를 나타내는데 사용<br>\n문자열은 0개 이상의 16비트 유니코드 문자(UTF-16)의 집합으로 전 세계 대부분의 문자를 표현할 수 있다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 세가지 방식으로 텍스트를 감싼다. 일반적으로 '' 사용</span>\n<span class=\"token keyword\">var</span> string<span class=\"token punctuation\">;</span>\nstring <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\nstring <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\nstring <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"template\" style=\"position:relative;\"><a href=\"#template\" aria-label=\"template permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Template</h2>\n<p>`를 사용한 리터럴로, 멀티라인(multi-line), 표현식 삽입(expression-interpolation), 태그드(tagged) 템플릿 등 편리한 문자열 처리를 제공  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> template<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//multi-line</span>\ntemplate <span class=\"token operator\">=</span> <span class=\"token string\">'Hello\\nWorld'</span><span class=\"token punctuation\">;</span>\ntemplate <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello\nWorld</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//expression-interpolation</span>\n<span class=\"token keyword\">var</span> first <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> last <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span>\ntemplate <span class=\"token operator\">=</span> <span class=\"token string\">'My Name is '</span> <span class=\"token operator\">+</span> first <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> last<span class=\"token punctuation\">;</span> <span class=\"token comment\">//'My Name is hello world'</span>\ntemplate <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">My Name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>last<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'My Name is hello world'</span>\n\ntemplate <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">1 + 2 = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token number\">1</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// '1 + 2 = 3'</span></code></pre></div>\n<h2 id=\"boolean\" style=\"position:relative;\"><a href=\"#boolean\" aria-label=\"boolean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boolean</h2>\n<p>참, 거짓을 나누는 <code class=\"language-text\">true</code>, <code class=\"language-text\">false</code>를 가짐</p>\n<h2 id=\"undefined\" style=\"position:relative;\"><a href=\"#undefined\" aria-label=\"undefined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>undefined</h2>\n<p>다른 언어에서는 할당되지 않는 값은 쓰레기 값으로 초기화 되는 것에 비해, javascript에서는 var 변수 선언에 의해 암묵적으로 할당된다.  </p>\n<h2 id=\"null\" style=\"position:relative;\"><a href=\"#null\" aria-label=\"null permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>null</h2>\n<p>위에서 만약 값이 없음을 명시적으로 알리고 싶을 때는 null을 사용한다</p>\n<h2 id=\"symbol\" style=\"position:relative;\"><a href=\"#symbol\" aria-label=\"symbol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Symbol</h2>\n<p>변경 불가능한 원시 타입의 값<br>\n다른 값과 중복되지 않는 유일무이한 값<br>\n주로 이름이 충돌할 일이 없는 객체의 유일한 프로퍼티 키를 만들기 위해 사용  </p>\n<p><code class=\"language-text\">Symbol</code> 함수를 호출해 생성. 이때 생성된 Symbol값은 외부에 노출되지 않으며, 다른 값과 절대 중복되지 않는 유일한 값이다.</p>\n<h2 id=\"필요성\" style=\"position:relative;\"><a href=\"#%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필요성</h2>\n<ul>\n<li>값을 저장할 때 확보해야 하는 메모리 공간의 크기를 결정하기 위해</li>\n<li>값을 참조할 때 한 번에 읽어 들여야 할 메모리 공간의 크기를 결정하기 위해</li>\n<li>메모리에서 읽어 들인 2진수를 어떻게 해석할지 결정하기 위해</li>\n</ul>\n<h2 id=\"동적-타이핑\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91\" aria-label=\"동적 타이핑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 타이핑</h2>\n<p>정적 타입언어 : C, Java등</p>\n<ul>\n<li>변수를 선언할 때 변수에 할당할 수 있는 값의 종류, 즉 데이터 타입을 사전에 선언해야 한다.</li>\n<li>명시적 타입 선언</li>\n<li>변수의 타입 변경 불가능하며, 선언한 타입에 맞는 값만 할당할 수 있다.</li>\n<li>컴파일 시점에 타입 체크</li>\n</ul>\n<p>동적 타입언어 : python, javascript</p>\n<ul>\n<li>키워드를 통해서 변수를 선언</li>\n<li>어떠한 데이터 값이라도 자유롭게 할당 가능</li>\n<li>typeof등의 연산자로 타입 조사</li>\n<li>값을 <strong>할당하는 시점에 변수의 타입이 동적으로 결정</strong> 되며 자유롭게 변경</li>\n<li>유연성은 높지만 신뢰성은 떨어진다.</li>\n</ul>\n<p>변수를 사용할 때 유의사항</p>\n<ul>\n<li>변수는 꼭 필요한 경우에 한해 제한적으로 사용.</li>\n<li>변수의 유효 범위(스코프)는 최대한 좁게 만들어 변수의 부작용을 억제해야 한다.</li>\n<li>전역변수는 최대한 사용하지 않도록 한다.</li>\n<li>변수보다는 상수를 사용해 값의 변경을 억제한다.</li>\n<li>변수 이름은 변수의 목적이나 의미를 파악할 수 있는 네이밍을 한다.</li>\n</ul>\n<p><br><br></p>\n<h1 id=\"연산자\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자</h1>\n<p>연산자 : 하나 이상의 표현식을 대상으로 산술, 할당, 비교, 논리, 타입, 지수 연산 등을 수행해 하나의 값을 만든다.<br>\n피연산자 : 연산자의 대상, 값으로 평가될 수 있는 표현식  </p>\n<h2 id=\"산술-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술 연산자</h2>\n<p>피연산자를 대상으로 수학적 계산을 수행. 산술연산이 불가능한 경우 NaN을 반환  </p>\n<ul>\n<li>이항 산술 연산자\n| 이항 산술 연산자 | 의미   | 부수효과 | 예시 |\n| ---------------- | ------ | -------- | ---- |\n| +                | 덧셈   | X        | 1+2  |\n| -                | 뺄셈   | X        | 2-1  |\n| *                | 곱셈   | X        | 1*2  |\n| /                | 나눗셈 | X        | 5/2  |\n| %                | 나머지 | X        | 5%2  |</li>\n<li>단항 산술 연산자\n| 단항 산술 연산자 | 의미                                          | 부수효과 | 예시             |\n| ---------------- | --------------------------------------------- | -------- | ---------------- |\n| ++               | 증가                                          | O        | score++, ++score |\n| —               | 감소                                          | O        | score—, —score |\n| +                | 어떠한 효과도 없음                            | X        | +10              |\n| +                | 양수를 음수로, 음수를 양수로 반전한 값을 반환 | X        | -(-10)           |</li>\n</ul>\n<p>다른 언어와 같이 <code class=\"language-text\">++</code>, <code class=\"language-text\">--</code>의 경우 위치에 따라서 연산 순서가 달라진다.</p>\n<ul>\n<li>피연산자 앞에 위치 : 먼저 피연산자의 값을 증가/감소 시킨 후 다른 연산을 수행</li>\n<li>피연산자 뒤에 위치 : 다른 연산을 먼저 수행한 뒤 피연산자의 값을 증가/감소</li>\n</ul>\n<p><code class=\"language-text\">+</code>의 경우 피연산자 중 하나 이상이 문자열인 경우 문자열 연결로 자동 연산<br>\n<code class=\"language-text\">true</code>, <code class=\"language-text\">false</code>, <code class=\"language-text\">null</code>, <code class=\"language-text\">undefined</code>의 경우도 자동 치환하여 계산한다.</p>\n<ul>\n<li>이를 암묵저거 타입변환(implicit coercion) 또는 타입 강제변환(type coercion)이라고 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\n<span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span></code></pre></div>\n<h2 id=\"할당-연산자\" style=\"position:relative;\"><a href=\"#%ED%95%A0%EB%8B%B9-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"할당 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>할당 연산자</h2>\n<ul>\n<li>우항에 있는 결과를 좌항에 있는 변수에 할당\n| 할당 연산자 | 예     | 동일 표현 | 부수 효과 |\n| ----------- | ------ | --------- | --------- |\n| =           | x=5    | x=5       | O         |\n| +=          | x += 5 | x = x + 5 | O         |\n| -=          | x -= 5 | x = x - 5 | O         |\n| *=          | x *= 5 | x = x * 5 | O         |\n| /=          | x /= 5 | x = x / 5 | O         |\n| %=          | x %= 5 | x = x % 5 | O         |</li>\n</ul>\n<p>할당문 그 자체는 할당된 값으로 연산된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// c = 0 : 0으로 치환</span>\n<span class=\"token comment\">// b = 0 : 0으로 치환</span>\n<span class=\"token comment\">// a = 0 : 0으로 치환</span></code></pre></div>\n<h2 id=\"비교-연산자\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교 연산자</h2>\n<p>조건식에서 주로 사용한다.</p>\n<ul>\n<li>동등/일치 비교연산자\n| 비교 연산자 | 의미        | 사례  | 설명                     | 부수효과 |\n| ----------- | ----------- | ----- | ------------------------ | -------- |\n| ==          | 동등 비교   | x==y  | x와 y의 값이 같음        | x        |\n| ===         | 일치 비교   | x===y | x와 y의 값과 타입이 같음 | x        |\n| !=          | 부동등 비교 | x!=y  | x와 y의 값이 다름        | x        |\n| !==         | 부일치 비교 | x!==y | x와 y의 값과 타입이 다름 | x        |</li>\n</ul>\n<p><code class=\"language-text\">==</code>와 <code class=\"language-text\">===</code>의 경우 같은지 여부하는 연산자지만 그 엄경도가 다르다.<br>\n동등비교(==)의 경우 좌항과 우항의 피연산자를 비교할 때 먼저 암묵적 타입변환을 통해 타입을 일치시킨 후 같은 값인지 비교한다.<br>\n일치비교(===)의 경우 좌항과 우항의 피연산자가 타입도 같고 값도 같은 경우에 한하여 <code class=\"language-text\">true</code>를 반환한다.  </p>\n<p>동등비교의 경우 결과를 예측하기 어렵고, 십수하기 쉽기 때문에 사용하지 않는 편이 좋다.<br>\n일치비교의 경우 NaN의 경우를 제외하면 타 언어의 동등 연산자와 같은 역할을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Nan <span class=\"token operator\">===</span> Nan <span class=\"token comment\">// false</span></code></pre></div>\n<p>위 문제점을 해결한 Object.is() 메서드가 ES6에서 도입되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Obejct<span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nObejct<span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h2 id=\"대소-관계-비교-연산자\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%86%8C-%EA%B4%80%EA%B3%84-%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"대소 관계 비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대소 관계 비교 연산자</h2>\n<table>\n<thead>\n<tr>\n<th>대소 관계 비교 연산자</th>\n<th>예제</th>\n<th>설명</th>\n<th>부수 효과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>></td>\n<td>x > y</td>\n<td>x가 y 보다 크다</td>\n<td>X</td>\n</tr>\n<tr>\n<td>&#x3C;</td>\n<td>x > y</td>\n<td>x가 y 보다 작다</td>\n<td>X</td>\n</tr>\n<tr>\n<td>>=</td>\n<td>x >= y</td>\n<td>x가 y 보다 크거나 같다</td>\n<td>X</td>\n</tr>\n<tr>\n<td>>=</td>\n<td>x >= y</td>\n<td>x가 y 보다 작거나 같다</td>\n<td>X</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"삼항-조건-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"삼항 조건 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 조건 연산자</h2>\n<p>조건식을 간단한 연산자를 통해 처리하는 방식이다.</p>\n<blockquote>\n<p><code class=\"language-text\">조건식 ? true일 때 반환 값 : false일 때 반환 값</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span> <span class=\"token operator\">?</span> <span class=\"token string\">'pass'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'fail'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><br><br></p>\n<h1 id=\"제어문\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EB%AC%B8\" aria-label=\"제어문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어문</h1>\n<p><br><br></p>\n<h1 id=\"타입-변환과-단축평가\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98%EA%B3%BC-%EB%8B%A8%EC%B6%95%ED%8F%89%EA%B0%80\" aria-label=\"타입 변환과 단축평가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 변환과 단축평가</h1>","fields":{"slug":"/posts/TIL/Javascript/Javascript 문법정리_1","tagSlugs":["/tag/javascript/","/tag/ecm-ascript/"]},"frontmatter":{"date":"2021-01-27T02:30:44.175Z","description":"Javscript 문법 정리 1","tags":["Javascript","ECMAscript"],"title":"Javascript 문법정리_1","socialImage":null}}},"pageContext":{"slug":"/posts/TIL/Javascript/Javascript 문법정리_1"}},"staticQueryHashes":["251939775","401334301","825871152"]}