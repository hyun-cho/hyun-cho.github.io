{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/TIL/Spring/Spring Boot/코드로-배우는-스프링부트/part1/스프링 MVC와 Thymeleaf","result":{"data":{"markdownRemark":{"id":"88631d27-873b-5d46-8a4a-e6032c31f69f","html":"<h2 id=\"thymeleaf-정리\" style=\"position:relative;\"><a href=\"#thymeleaf-%EC%A0%95%EB%A6%AC\" aria-label=\"thymeleaf 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thymeleaf 정리</h2>\n<ul>\n<li>반복문 처리</li>\n<li><code class=\"language-text\">th:each</code>라는 속성 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">th:each=\"변수: ${목록}\"</code></pre></div>\n<ul>\n<li>\n<p>반복문의 상태(state) 객체</p>\n<ul>\n<li>부가적으로 상요할 수 있는 상태(state) 객체가 존재를순번이나 인덱스 번호, 홀짝 등을 지정 가능</li>\n</ul>\n</li>\n<li>\n<p>제어문 처리</p>\n<ul>\n<li><code class=\"language-text\">th:if ~ unless</code> 등을 이용, 삼항연산자 또한 가능</li>\n<li><code class=\"language-text\">th:if, th:unless</code>, 다른 언어는 <code class=\"language-text\">if ~ else</code> 구문이지만, Thymeleaf는 단독으로 처리함</li>\n</ul>\n</li>\n<li>\n<p>inline 속성</p>\n<ul>\n<li>주로 javaScript 처리에서 유용.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/exInline\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">exInline</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedirectAttributes</span> redirectAttributes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exInline.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">SampleDTO</span> dto <span class=\"token operator\">=</span> <span class=\"token class-name\">SampleDTO</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">sno</span><span class=\"token punctuation\">(</span><span class=\"token number\">100L</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Frist....100\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">last</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Last....100\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">regTime</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    redirectAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">addFlashAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    redirectAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">addFlashAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dto\"</span><span class=\"token punctuation\">,</span> dto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"redirect:/sample/ex3\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ex3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ex3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ex3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>exInline()은 내부적으로 RedirectAttributes를 이용하여 ‘/ex3’으로 result와 dto라는 이름의 데이터를 심어서 전달.</li>\n<li>dto는 SampleDTO 객체</li>\n<li>javascript 생성부분을 보면</li>\n<li>문자열은 자동으로 ” “이 추가되어 문자열이 됨</li>\n<li>객체는 자동으로 JSON gudtlrdmfh qusghks</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">th:block</code> 기능</p>\n<ul>\n<li>별도의 태그가 필요 없기 때문에 제약이 없다.</li>\n<li>실제 화면에서는 html로 처리 되지 않는다.</li>\n<li>루프 등을 별도로 처리하는 용도로 많이 사용</li>\n</ul>\n</li>\n<li>\n<p>링크 처리</p>\n<ul>\n<li>\n<p><code class=\"language-text\">@{}</code>를 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dto : ${list}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@{/sample/exView(sno=${dto.sno})}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>[[${dto}]]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<p>생성 후\n<a href=\"/sample/exView?sno=1\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- sno를 path로 사용하고 싶다면 다음과 같이 사용\n\n```html\n&lt;li th:each=&quot;dto : ${list}&quot;&gt;\n    &lt;a th:href=&quot;@{/sample/exView/{sno}(sno=${dto.sno})}&quot;&gt;[[${dto}]]&lt;/a&gt;\n&lt;/li&gt;\n\n생성 후\n&lt;a href=&quot;/sample/exView/3&quot;&gt;</code></pre></div>\n</li>\n</ul>\n<h2 id=\"thymeleaf의-기본-객체와-localdatetime\" style=\"position:relative;\"><a href=\"#thymeleaf%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9D%EC%B2%B4%EC%99%80-localdatetime\" aria-label=\"thymeleaf의 기본 객체와 localdatetime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thymeleaf의 기본 객체와 LocalDateTime</h2>\n<ul>\n<li>\n<p>다양한 기본 객체 지원</p>\n<ul>\n<li>문자 숫자 파라미터 request, response, session 등</li>\n<li><code class=\"language-text\">#numbers</code>, <code class=\"language-text\">#dates</code>등을 설정없이 사용 가능</li>\n<li>숫자 포맷팅을 아래와 같이 사용가능</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dto : ${list}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        [[${#numbers.formatInteger(dto.sno, 5)}]]\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>Java 8+ 버전에 LocalDate 타입이나 LocalDateTime에 대해서 복잡하게 처리해야된다.</li>\n<li><code class=\"language-text\">thymeleaf-extras-java8time</code>을 사용하면 더 편리하게 사용가능</li>\n<li>실제에서는 <code class=\"language-text\">#temporals</code>라는 객체를 사용해서 format()으로 처리</li>\n</ul>\n<h2 id=\"thymeleaf의-레이아웃\" style=\"position:relative;\"><a href=\"#thymeleaf%EC%9D%98-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83\" aria-label=\"thymeleaf의 레이아웃 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thymeleaf의 레이아웃</h2>\n<ul>\n<li>\n<p>2가지 형태로 사용가능</p>\n<ul>\n<li>JSP의 include와 같이 특정 부분을 외부 혹은 내부에서 가져와서 포함하는 형태</li>\n<li>특정한 부분을 파라미터로 전달해서 내용에 포함하는 형태</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"include-방식의-처리\" style=\"position:relative;\"><a href=\"#include-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B2%98%EB%A6%AC\" aria-label=\"include 방식의 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>include 방식의 처리</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">th:insert</code>나 <code class=\"language-text\">th:replace</code>기능 - 특정한 부분을 다른 내용으로 변경</p>\n<ul>\n<li>reaplce의 경우 기존의 내용응 완전히 대체</li>\n<li>insert 방식은 기존 내용의 바깥쪽 태그는 그대로 유지하면서 추가되는 방식</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">::</code> 뒤에는 fragment의 이름을 지정하거나 CSS의 #id와 같은 선택자를 이용할 수 있다.</p>\n<ul>\n<li>만약 <code class=\"language-text\">::</code>를 생략하면 파일 전체내용을 가져온다.</li>\n</ul>\n</li>\n<li>\n<p>파라미터 방식의 처리</p>\n<ul>\n<li>특정한 태그를 파라미터 처럼 전달해서 다른 th:fragment에서 사용 할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>fragment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target(first, second)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n            <span class=\"token selector\">.c1</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token selector\">.c2</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>replace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${first}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>replace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${second}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>선언된 target 부분에는 first와 second라는 파라미터를 받을 수 있도록 구성</li>\n<li>또한 내부적으로 th:block으로 이를 표현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>replace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>~{/fragment/fragment3:: target(~{this:: #ulFirst}, ~{this::#ulSecond} )}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ulFirst<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>AAA<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>BBB<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>CCC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ulSecond<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>111<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>222<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>333<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">th:</span>block</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>화면 구성 기능 대신 target을 사용할 때 파라미터를 2개 사용</li>\n<li>this: #ulFirst - this는 현재 페이지를 의미, 생략 가능 / #ulFirst는 CSS의 id 선택자</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"layout-템플릿-만들기\" style=\"position:relative;\"><a href=\"#layout-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"layout 템플릿 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>layout 템플릿 만들기</h3>\n<ul>\n<li>layout 폴더에 layout을 만들고, content 영역에 fragment를 삽입</li>\n</ul>\n<h3 id=\"부트스트랩-템플릿-적용하기\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%8A%B8%EC%8A%A4%ED%8A%B8%EB%9E%A9-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"부트스트랩 템플릿 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부트스트랩 템플릿 적용하기</h3>\n<ul>\n<li>부트스트랩 템플릿을 가져와서 레이아웃 설정해보기</li>\n</ul>","fields":{"slug":"/posts/TIL/Spring/Spring Boot/코드로-배우는-스프링부트/part1/스프링 MVC와 Thymeleaf","tagSlugs":["/tag/코드로-배우는-스프링부트/","/tag/spring/","/tag/spring-boot/","/tag/maria-db/","/tag/thymeleaf/","/tag/mvc/"]},"frontmatter":{"date":"2021-01-19T23:46:37.121Z","description":"코드로 배우는 스프링부트 part1/chapter3 스프링 MVC와 Thymeleaf","tags":["코드로-배우는-스프링부트","Spring","Spring Boot","MariaDB","Thymeleaf","MVC"],"title":"스프링 MVC와 Thymeleaf","socialImage":null}}},"pageContext":{"slug":"/posts/TIL/Spring/Spring Boot/코드로-배우는-스프링부트/part1/스프링 MVC와 Thymeleaf"}},"staticQueryHashes":["251939775","401334301","825871152"]}