{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/blog/코드로-배우는-스프링부트/part1/스프링 부트 프로젝트 준비하기","result":{"data":{"markdownRemark":{"id":"9ac064ad-5fde-5cb4-9ea9-c3f3a39fba04","html":"<h1 id=\"chapter-1-프로젝트-준비하기\" style=\"position:relative;\"><a href=\"#chapter-1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%80%EB%B9%84%ED%95%98%EA%B8%B0\" aria-label=\"chapter 1 프로젝트 준비하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chapter 1 프로젝트 준비하기</h1>\n<h2 id=\"프로젝트-준비\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A4%80%EB%B9%84\" aria-label=\"프로젝트 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 준비</h2>\n<p>intelliJ를 사용해서 프로젝트를 생성하고 관리합니다.  </p>\n<p><a href=\"https://www.jetbrains.com/idea\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intellij 개발도구 다운로드</a>  </p>\n<p>본 실습은 Community 과정만 담고 있습니다. Ultimate 버전을 사용하면 많은 부분을 간편하게 사용 가능합니다.  </p>\n<h2 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<p>회사에서 Ultimate 버전은 아직 지원을 안해주기 때문에 Community 버전으로 프로젝트를 생성해야한다.<br>\nCommunity에서는 Spring Initializer를 지원하지 않기 때문에 외부 사이트를 사용한다.  </p>\n<p><a href=\"https://start.spring.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Initializer</a>에서 프로젝트를 생성하고 IntelliJ에서 Import하자.  </p>\n<h2 id=\"lombok-플러그인-추가\" style=\"position:relative;\"><a href=\"#lombok-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%B6%94%EA%B0%80\" aria-label=\"lombok 플러그인 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lombok 플러그인 추가</h2>\n<p>내 프로젝트 설정 (File > Setting > Plugin) 에서 Lombok 플러그인을 추가하고 빌드한다.<br>\n이미 추가되어 있다면, 사용을 위해서 기능 활성화에 대한 메시지가 나오면 <code class=\"language-text\">Enable</code>을 선택해서 프로젝트를 초기화한다.<br>\n추가 되었다면 <code class=\"language-text\">build.gradle</code>의 <code class=\"language-text\">dependency</code>에 다음과 같은 구문을 추가하자  </p>\n<div class=\"gatsby-highlight\" data-language=\"gradle\"><pre class=\"language-gradle\"><code class=\"language-gradle\">dependencies {\n\tcompileOnly &#39;org.projectlombok:lombok&#39;\n\tannotationProcessor &#39;org.projectlombok:lombok&#39;</code></pre></div>\n<p>}</p>\n<h2 id=\"프로젝트-실행\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%A4%ED%96%89\" aria-label=\"프로젝트 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 실행</h2>\n<p><code class=\"language-text\">src.main.java.com.example.demo</code> 안에 실행가능한 Application이 존재 할 것이다.이를 실행 시켜 보자<br>\n만약 문제가 생겼다면 <code class=\"language-text\">build.gradle</code>에서의 환경설정 문제가 가장 클 것이라고 예상<br>\n또는 <code class=\"language-text\">8080port</code>로 자동으로 호스팅 되는데, 여기서 문제가 생길수도 있다.<br>\n계정 이름에서 한글을 지우고 영어로 바꿔보자.  </p>\n<h2 id=\"테스트-실행\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89\" aria-label=\"테스트 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 실행</h2>\n<p><code class=\"language-text\">src/test/java/com.example.demo</code> 안에 이미 테스트 파일이 들어있다. 이를 실행해보자<br>\ntest환경에서 <code class=\"language-text\">lombok</code>을 사용하려면 다음과같이 <code class=\"language-text\">test***</code>으로 시작하는 구문을 추가해야한다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"gradle\"><pre class=\"language-gradle\"><code class=\"language-gradle\">dependencies {\n    testCompileOnly &#39;org.projectlombok:lombok&#39;\n    testAnnotationProcessor &#39;org.projectlombok:lombok&#39;\n}</code></pre></div>\n<h2 id=\"컨트롤러-클래스-생성\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"컨트롤러 클래스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨트롤러 클래스 생성</h2>\n<p>컨트롤러 클래스를 생성해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약 <code class=\"language-text\">@RestController</code>, <code class=\"language-text\">@GetMapping</code>에 대해서 import가 나오지 않는다면, build.gradle로 돌아가 spring web을 추가해보자.(검색)<br>\n실행 후 <a href=\"http://localhost:8080/hello\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:8080/hello</a>로 접속해보면 결과를 확인 할 수 있다.<br>\n개발자 도구로 살펴보면, 별다른 설정 없이도 <code class=\"language-text\">json</code> 형식으로 전달 된 것을 볼 수 있다!  </p>\n<h2 id=\"스프링-부트를-단독-실행가능파일로-만들기\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8%EB%A5%BC-%EB%8B%A8%EB%8F%85-%EC%8B%A4%ED%96%89%EA%B0%80%EB%8A%A5%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"스프링 부트를 단독 실행가능파일로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 부트를 단독 실행가능파일로 만들기</h2>\n<p>기존 프로젝트는 Tomcat과 같은 별도의 WAS가 반드시 필요했고, 이를 배포하는 과정이 수반<br>\n스프링부트에서는 단독으로 실행가능한 웹 애플리케이션을 jar 파일의 형태로 제작하고 사용하는 것이 가능<br>\n프로젝트 우측 <code class=\"language-text\">gradle &gt; Tasks &gt; build &gt; boorJar</code>를 실행하면 jar파일이 생성된다.  </p>","fields":{"slug":"/posts/blog/코드로-배우는-스프링부트/part1/스프링 부트 프로젝트 준비하기","tagSlugs":["/tag/코드로-배우는-스프링부트/","/tag/spring/","/tag/spring-boot/","/tag/maria-db/"]},"frontmatter":{"date":"2021-01-19T23:46:37.121Z","description":"코드로 배우는 스프링부트 part1/chapter1 스프링 부트 프로젝트 준비하기","tags":["코드로-배우는-스프링부트","Spring","Spring Boot","MariaDB"],"title":"스프링 부트 프로젝트 준비하기","socialImage":null}}},"pageContext":{"slug":"/posts/blog/코드로-배우는-스프링부트/part1/스프링 부트 프로젝트 준비하기"}},"staticQueryHashes":["251939775","401334301","825871152"]}